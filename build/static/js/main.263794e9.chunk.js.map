{"version":3,"sources":["feature/postSlice.js","Component/Navbar.js","Component/TextPost.js","Component/Modify.js","Component/Delete.js","Component/Home.js","Component/View.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["postSlice","createSlice","name","initialState","post","reducers","getpost","state","action","payload","removepost","actions","selectpost","Navbar","dispatch","useDispatch","loading","axios","get","then","data","allpost","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","Icon","Typography","variant","component","className","to","Button","onClick","TextPost","React","useState","open","setOpen","ope","setOpe","handleClose","handleClos","title","setTitle","content","setContent","id","setId","m","width","noValidate","autoComplete","TextField","value","onChange","e","Tit","target","label","multiline","Cont","role","msg","_id","catch","err","console","log","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Modify","useSelector","clickTitle","setClickTitle","clickId","setClickId","bool","setBool","setTimeout","length","map","element","Card","style","height","margin","CardActionArea","CardContent","marginTop","gutterBottom","CardActions","autoFocus","type","fullWidth","maxRows","patch","modifiedCount","Delete","startIcon","delete","deletedCount","Home","View","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"yTAEaA,EAAUC,YAAY,CAC/BC,KAAM,OACNC,aAAa,CACTC,KAAM,MAEVC,SAAS,CACLC,QAAS,SAACC,EAAMC,GACZD,EAAMH,KAAKI,EAAOC,SAEtBC,WAAW,SAACH,GACRA,EAAMH,KAAK,SAKhB,EAA4BJ,EAAUW,QAA/BL,EAAP,EAAOA,QACDM,GADN,EAAgBF,WACC,SAACH,GAAD,OAASA,EAAMH,KAAKA,OAC7BJ,IAAf,Q,OCPaa,EAAS,WACpB,IAAMC,EAASC,cACTC,EAAQ,WACZC,IAAMC,IAAI,0CACTC,MAAK,SAAAC,GAAI,OAAEN,EAASR,EAAQ,CAC3Be,QAASD,EAAKA,YAGhB,OACI,8BACI,cAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACN,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAM,UACN,aAAW,OACXR,GAAI,CAAES,GAAI,GALZ,SAOE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMb,GAAI,CAAEC,SAAU,GAAzD,qBAGA,cAAC,IAAD,CAAMa,UAAU,OAAQC,GAAG,IAA3B,SAA+B,cAACC,EAAA,EAAD,CAAQF,UAAU,OAAON,MAAM,UAA/B,oBAC/B,cAAC,IAAD,CAAMM,UAAU,OAAOG,QAASxB,EAASsB,GAAG,WAA5C,SAAuD,cAACC,EAAA,EAAD,CAASF,UAAU,OAAON,MAAM,UAAhC,yBACvD,cAAC,IAAD,CAAMM,UAAU,OAAQC,GAAG,WAA3B,SAAsC,cAACC,EAAA,EAAD,CAAQF,UAAU,OAAON,MAAM,UAA/B,wBACtC,cAAC,IAAD,CAAMM,UAAU,OAAOG,QAASxB,EAASsB,GAAG,cAA5C,SAA0D,cAACC,EAAA,EAAD,CAAQF,UAAU,OAAON,MAAM,UAA/B,2BAC1D,cAAC,IAAD,CAAMM,UAAU,OAAOG,QAASxB,EAASsB,GAAG,cAA5C,SAA0D,cAACC,EAAA,EAAD,CAASF,UAAU,OAAON,MAAM,UAAhC,qC,oEC7BvDU,EAAW,WACpB,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBH,IAAMC,UAAS,GAArC,mBAAOG,EAAP,KAAYC,EAAZ,KAEMC,EAAc,WAAOH,GAAQ,IAC7BI,EAAa,WAAOF,GAAO,IACjC,EAAwBJ,mBAAS,IAAjC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAkBV,mBAAS,IAA3B,mBAAOW,EAAP,KAAWC,EAAX,KA0BA,OACI,gCAEI,8CACA,eAACjC,EAAA,EAAD,CACIc,UAAU,OACVb,GAAI,CACA,kBAAmB,CAAEiC,EAAG,EAAGC,MAAO,SAEtCC,YAAU,EACVC,aAAa,MACbtB,UAAU,OAPd,UASI,cAACuB,EAAA,EAAD,CAAWN,GAAG,iBAAiBO,MAAOX,EAAOY,SAtCtC,SAACC,GAChB,IAAIC,EAAKD,EAAEE,OAAOJ,MAClBV,EAASa,IAoCoEE,MAAM,QAAQ/B,QAAQ,aAC3F,cAACyB,EAAA,EAAD,CAAWN,GAAG,iBAAiBa,WAAS,EAACN,MAAOT,EAASU,SAnChD,SAACC,GAClB,IAAIK,EAAML,EAAEE,OAAOJ,MACnBR,EAAWe,IAiCgFF,MAAM,UAAU/B,QAAQ,gBAEzG,KAALmB,EAAS,GAAG,qBAAKjB,UAAU,iBAAiBgC,KAAK,WAGlD,qBAAKhC,UAAU,KAAf,SACA,cAACE,EAAA,EAAD,CAAQJ,QAAQ,YAAYJ,MAAM,UAAUS,QArCvC,WACE,KAARU,GAAwB,KAAVE,EAfUP,GAAQ,IAkB/BU,EAAM,QACNtC,IAAMb,KAAK,yCAA0C,CAAC8C,MAAQA,EAAOE,QAASA,IAC7EjC,MAAK,SAAAC,GACqB,SAApBA,EAAKA,KAAKkD,IAAIC,MACbxB,GAAO,GACPI,EAAS,IACTE,EAAW,IACXE,EAAM,QAGbiB,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,QAuBqCpC,UAAU,KAAvE,sBAEJ,eAACuC,EAAA,EAAD,CAAQhC,KAAMA,EAAMiC,QAAS7B,EAA7B,UACQ,cAAC8B,EAAA,EAAD,2BAGA,cAACC,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,qDAIA,cAACC,EAAA,EAAD,UACI,cAAC1C,EAAA,EAAD,CAAQC,QAASQ,EAAjB,uBAGZ,eAAC4B,EAAA,EAAD,CAAQhC,KAAME,EAAK+B,QAAS5B,EAA5B,UACQ,cAAC6B,EAAA,EAAD,yBAGA,cAACC,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,mDAIA,cAACC,EAAA,EAAD,UACI,cAAC1C,EAAA,EAAD,CAAQC,QAASS,EAAjB,2B,oCCzEPiC,EAAS,WAClB,IAAMpE,EAASC,cACTX,EAAM+E,YAAYvE,GACxB,EAAwB8B,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCH,IAAMC,SAAS,IAAjD,mBAAMyC,EAAN,KAAkBC,EAAlB,KACA,EAA4B3C,IAAMC,SAAS,IAA3C,mBAAO2C,EAAP,KAAgBC,EAAhB,KACA,EAAuB7C,IAAMC,SAAS,IAAtC,mBAAMO,EAAN,KAAaC,EAAb,KACA,EAA4BT,IAAMC,SAAS,IAA3C,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsBX,IAAMC,UAAS,GAArC,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAsBL,IAAMC,UAAS,GAArC,mBAAO6C,EAAP,KAAaC,EAAb,KAKMzC,EAAc,WAChBuC,EAAW,IACX1C,GAAQ,IA6BZ,OALQ6C,YAAW,WACPD,GAAQ,KACT,KAIP,sBAAKpD,UAAU,YAAf,WACY,IAAPmD,EACM,OAAPpF,EACsB,IAAtBA,EAAKiB,QAAQsE,OAAW,gCACxB,cAACzD,EAAA,EAAD,CAAYC,QAAQ,QAAQJ,MAAM,iBAAlC,yCAGA,cAACQ,EAAA,EAAD,CAAQJ,QAAQ,YAAhB,SACI,cAAC,IAAD,CAAME,UAAU,OAAOC,GAAG,WAA1B,+BAIJlC,EAAKiB,QAAQuE,KAAI,SAAAC,GAAO,OACpB,eAACC,EAAA,EAAD,CAAMC,MAAO,CAACtC,MAAM,QAASuC,OAAQ,QAASC,OAAO,OAArD,UACA,cAACC,EAAA,EAAD,CAAgBH,MAAO,CAACC,OAAQ,SAAhC,SACA,eAACG,EAAA,EAAD,WACA,cAACjE,EAAA,EAAD,CAAY6D,MAAO,CAACK,UAAU,QAASC,cAAY,EAAClE,QAAQ,KAAKC,UAAU,MAA3E,SACKyD,EAAQ3C,QAEb,cAAChB,EAAA,EAAD,CAAYC,QAAQ,QAAQJ,MAAM,iBAAlC,SACK8D,EAAQzC,eAIb,cAACkD,EAAA,EAAD,UACA,cAAC/D,EAAA,EAAD,CAAQV,KAAK,QAAQW,QAAS,WAC9BK,GAAQ,GACRwC,EAAcQ,EAAQ3C,OACtBqC,EAAWM,EAAQtB,MAChBxC,MAAM,UAJT,4BAQK,gCACT,cAACG,EAAA,EAAD,CAAYC,QAAQ,QAAQJ,MAAM,iBAAlC,qEAGI,cAACQ,EAAA,EAAD,CAAQJ,QAAQ,YAAhB,SACI,cAAC,IAAD,CAAMG,GAAG,cAAcD,UAAU,OAAjC,mCAKR,qBAAKA,UAAU,yBAAyBgC,KAAK,WAErD,gCACI,eAACO,EAAA,EAAD,CAAQhC,KAAMA,EAAMiC,QAAS7B,EAA7B,UACA,eAAC8B,EAAA,EAAD,qBAAqBM,KACrB,eAACL,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,iEAGA,cAACpB,EAAA,EAAD,CACI2C,WAAS,EACTN,OAAO,QACP3C,GAAG,OACHY,MAAM,aACNsC,KAAK,OACLC,WAAS,EACTtE,QAAQ,WACR0B,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAKZ,EAASY,EAAEE,OAAOJ,UAErC,cAACD,EAAA,EAAD,CACIqC,OAAO,QACP3C,GAAG,MACHY,MAAM,eACNsC,KAAK,OACLrC,WAAS,EACTuC,QAAS,EACTD,WAAS,EACTtE,QAAQ,WACR0B,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAKV,EAAWU,EAAEE,OAAOJ,aAGvC,eAACoB,EAAA,EAAD,WACA,cAAC1C,EAAA,EAAD,CAAQC,QAASQ,EAAjB,oBACA,cAACT,EAAA,EAAD,CAAQC,QA3GkB,WACtBK,GAAQ,GACK,KAAVO,GAAwB,KAARF,EACfH,GAAO,IAEP9B,IAAM0F,MAAN,qDAA0DrB,GAAW,CAACpC,MAAMA,EAAOE,QAAQA,IAC1FjC,MAAK,SAAAC,GACFqE,GAAQ,GACqB,IAA1BrE,EAAKA,KAAKwF,gBACT3F,IAAMC,IAAI,0CACTC,MAAK,SAAAC,GAAI,OAAEN,EAASR,EAAQ,CAC7Be,QAASD,EAAKA,WACdsE,YAAW,WACPD,GAAQ,KACT,SAGVjB,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MACxBtB,EAAS,IACTE,EAAW,MAwFnB,wBAGJ,eAACuB,EAAA,EAAD,CAAQhC,KAAME,EAAd,UACY,cAACgC,EAAA,EAAD,6BAGA,cAACC,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,qDAIA,cAACC,EAAA,EAAD,UACI,cAAC1C,EAAA,EAAD,CAAQC,QA/HL,WACfO,GAAO,GACPF,GAAQ,IA6HI,8B,iBC1IPgE,EAAS,WAClB,IAAM/F,EAASC,cACf,EAAwB2B,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBH,IAAMC,UAAS,GAArC,mBAAO6C,EAAP,KAAaC,EAAb,KACMrF,EAAM+E,YAAYvE,GACxB,EAAkC8B,IAAMC,SAAS,IAAjD,mBAAMyC,EAAN,KAAkBC,EAAlB,KACA,EAA4B3C,IAAMC,SAAS,IAA3C,mBAAO2C,EAAP,KAAgBC,EAAhB,KACMvC,EAAc,WACpBH,GAAQ,IAsBR,OAJA6C,YAAW,WACPD,GAAQ,KACT,KAGK,sBAAKpD,UAAU,YAAf,WACQ,IAAPmD,EACM,OAAPpF,EACsB,IAAtBA,EAAKiB,QAAQsE,OAAW,gCACpB,cAACzD,EAAA,EAAD,CAAYC,QAAQ,QAAQJ,MAAM,iBAAlC,yCAGJ,cAACQ,EAAA,EAAD,CAAQJ,QAAQ,YAAhB,SACI,cAAC,IAAD,CAAME,UAAU,OAAOC,GAAG,WAA1B,+BAIJlC,EAAKiB,QAAQuE,KAAI,SAAAC,GAAO,OACpB,eAACC,EAAA,EAAD,CAAMC,MAAO,CAACtC,MAAM,QAASuC,OAAQ,QAASC,OAAO,OAArD,UACA,cAACC,EAAA,EAAD,CAAgBH,MAAO,CAACC,OAAQ,SAAhC,SACA,eAACG,EAAA,EAAD,WACA,cAACjE,EAAA,EAAD,CAAY6D,MAAO,CAACK,UAAU,QAASC,cAAY,EAAClE,QAAQ,KAAKC,UAAU,MAA3E,SACKyD,EAAQ3C,QAEb,cAAChB,EAAA,EAAD,CAAYC,QAAQ,QAAQJ,MAAM,iBAAlC,SACK8D,EAAQzC,eAIb,cAACkD,EAAA,EAAD,UACA,cAAC/D,EAAA,EAAD,CAAQJ,QAAQ,WAAWK,QAAS,WACpCK,GAAQ,GACR0C,EAAWM,EAAQtB,KACnBc,EAAcQ,EAAQ3C,QACnB4D,UAAW,cAAC,IAAD,IAJd,4BAQK,gCACT,cAAC5E,EAAA,EAAD,CAAYC,QAAQ,QAAQJ,MAAM,iBAAlC,qEAGI,cAACQ,EAAA,EAAD,CAAQJ,QAAQ,YAAhB,SACI,cAAC,IAAD,CAAMG,GAAG,cAAcD,UAAU,OAAjC,mCAKR,qBAAKA,UAAU,yBAAyBgC,KAAK,WAE7C,eAACO,EAAA,EAAD,CAAQhC,KAAMA,EAAMiC,QAAS7B,EAA7B,UACA,eAAC8B,EAAA,EAAD,qBAAqBM,KACrB,cAACL,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,2DAIA,eAACC,EAAA,EAAD,WACA,cAAC1C,EAAA,EAAD,CAAQC,QAASQ,EAAjB,oBACA,cAACT,EAAA,EAAD,CAAQC,QA5EG,WACfK,GAAQ,GACR5B,IAAM8F,OAAN,gDAAsDzB,IACrDnE,MAAK,SAAAC,GACFqE,GAAQ,GACoB,IAAzBrE,EAAKA,KAAK4F,eACT/F,IAAMC,IAAI,0CACLC,MAAK,SAAAC,GAAI,OAAEN,EAASR,EAAQ,CAC7Be,QAASD,EAAKA,WAElBsE,YAAW,WACPD,GAAQ,KACV,UAgEN,8BCtGCwB,EAAO,WAChB,OACI,8BACI,6DCSCC,G,OAAO,WAChB,IAAM9G,EAAM+E,YAAYvE,GACxB,EAAsB8B,IAAMC,UAAS,GAArC,mBAAO6C,EAAP,KAAaC,EAAb,KAOA,OALQC,YAAW,WACPD,GAAQ,KACT,KAIP,sBAAKpD,UAAU,YAAf,WACY,IAAPmD,EACM,OAAPpF,EACsB,IAAtBA,EAAKiB,QAAQsE,OAAW,gCACpB,cAACzD,EAAA,EAAD,CAAYC,QAAQ,QAAQJ,MAAM,iBAAlC,yCAGJ,cAACQ,EAAA,EAAD,CAAQJ,QAAQ,YAAhB,SACI,cAAC,IAAD,CAAME,UAAU,OAAOC,GAAG,WAA1B,+BAIJlC,EAAKiB,QAAQuE,KAAI,SAAAC,GAAO,OACpB,eAACC,EAAA,EAAD,CAAMC,MAAO,CAACtC,MAAM,QAASuC,OAAQ,QAASC,OAAO,OAArD,UACA,cAACC,EAAA,EAAD,CAAgBH,MAAO,CAACC,OAAQ,SAAhC,SACA,eAACG,EAAA,EAAD,WACA,cAACjE,EAAA,EAAD,CAAY6D,MAAO,CAACK,UAAU,QAASC,cAAY,EAAClE,QAAQ,KAAKC,UAAU,MAA3E,SACKyD,EAAQ3C,QAEb,cAAChB,EAAA,EAAD,CAAYC,QAAQ,QAAQJ,MAAM,iBAAlC,SACK8D,EAAQzC,eAIb,cAACkD,EAAA,EAAD,UAEK,gCACT,cAACpE,EAAA,EAAD,CAAYC,QAAQ,QAAQJ,MAAM,iBAAlC,qEAGI,cAACQ,EAAA,EAAD,CAAQJ,QAAQ,YAAhB,SACI,cAAC,IAAD,CAAMG,GAAG,WAAWD,UAAU,OAA9B,mCAKR,qBAAKA,UAAU,yBAAyBgC,KAAK,WAErD,6BCpBW8C,MA3Bf,WACE,IAAMrG,EAASC,cAQf,OANEE,IAAMC,IAAI,0CACTC,MAAK,SAAAC,GAAI,OAAEN,EAASR,EAAQ,CAC3Be,QAASD,EAAKA,WAKhB,cAAC,IAAD,UACI,mCACI,sBAAKiB,UAAU,MAAf,UACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+E,KAAK,IAAIvB,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOuB,KAAK,YAAYvB,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOuB,KAAK,cAAcvB,QAAU,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOuB,KAAK,cAAcvB,QAAU,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOuB,KAAK,WAAWvB,QAAS,cAAC,EAAD,iBCpB/BwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpG,MAAK,YAAkD,IAA/CqG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCLCO,cAAe,CAC1BC,QAAQ,CACJ1H,KAAMJ,KCGd+H,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACA,cAAC,EAAD,QAIFC,SAASC,eAAe,SAM1Bf,K","file":"static/js/main.263794e9.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\nexport const postSlice=createSlice({\r\n    name: \"post\",\r\n    initialState:{\r\n        post: null\r\n    },\r\n    reducers:{\r\n        getpost: (state,action)=>{\r\n            state.post=action.payload;\r\n        },\r\n        removepost:(state)=>{\r\n            state.post=null;\r\n        }\r\n    }\r\n})\r\n\r\nexport const {getpost, removepost}=postSlice.actions\r\nexport const selectpost=(state)=>state.post.post;\r\nexport default postSlice.reducer","import AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport {Link} from 'react-router-dom';\r\nimport './style.css'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\nimport {getpost} from '../feature/postSlice'\r\nexport const Navbar = () => {\r\n  const dispatch=useDispatch()\r\n  const loading=()=>{\r\n    axios.get(\"https://bdh.herokuapp.com/post/allpost\")\r\n    .then(data=>dispatch(getpost({\r\n      allpost: data.data\r\n    })))\r\n  }\r\n    return (\r\n        <div>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <Icon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Stories\r\n          </Typography>\r\n          <Link className='Link'  to='/'><Button className='btnn' color=\"inherit\">Home</Button></Link>\r\n          <Link className='Link' onClick={loading} to='/allpost'><Button  className='btnn' color=\"inherit\">view post</Button></Link>\r\n          <Link className='Link'  to='/newpost'><Button className='btnn' color=\"inherit\">Add post</Button></Link>\r\n          <Link className='Link' onClick={loading} to='/updatepost'><Button className='btnn' color=\"inherit\">modify post</Button></Link>\r\n          <Link className='Link' onClick={loading} to='/deletepost'><Button  className='btnn' color=\"inherit\">delete post</Button></Link>\r\n          {/* <Button className='btnn' color=\"inherit\"><Link className='Link'  to='/deleted'>deleted post</Link></Button> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n        </div>\r\n    )\r\n}\r\n","import Box from '@material-ui/core/Box';\r\nimport './style.css'\r\nimport {useState} from 'react'\r\nimport { Button} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nexport const TextPost = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [ope, setOpe] = React.useState(false);\r\n    const handleClickOpen = () => {setOpen(true);};\r\n    const handleClose = () => {setOpen(false);}\r\n    const handleClos = () => {setOpe(false);}\r\n    const [title, setTitle]=useState(\"\")\r\n    const [content, setContent]=useState(\"\")\r\n    const [id, setId]=useState(\"\")\r\n    const handlerTitle=(e)=>{\r\n        let Tit= e.target.value\r\n        setTitle(Tit)\r\n    }\r\n    const handlerContent=(e)=>{\r\n        let Cont= e.target.value\r\n        setContent(Cont)\r\n    }\r\n    const submit=()=>{\r\n        if(title===\"\" || content===\"\"){\r\n            handleClickOpen()\r\n        }else{\r\n            setId(\"load\")\r\n            axios.post(\"https://bdh.herokuapp.com/post/newpost\", {title:  title, content: content})\r\n            .then(data=>{\r\n                if(data.data.msg._id!==\"none\"){\r\n                    setOpe(true)\r\n                    setTitle(\"\")\r\n                    setContent(\"\")\r\n                    setId(\"\")\r\n                }\r\n            })\r\n            .catch(err=>console.log(err))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n            <h1>Add new post</h1>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& > :not(style)': { m: 1, width: '40ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n                className='main'\r\n                >\r\n                <TextField id=\"standard-basic\" value={title} onChange={handlerTitle} label=\"Title\" variant=\"standard\" />\r\n                <TextField id=\"standard-basic\" multiline value={content} onChange={handlerContent} label=\"Content\" variant=\"standard\" />\r\n            </Box>\r\n            {id===\"\"? \"\":<div className=\"spinner-border\" role=\"status\">\r\n            </div>}\r\n            \r\n            <div className='na'>\r\n            <Button variant='contained' color='primary' onClick={submit} className='bt'>Create</Button>\r\n            </div>\r\n        <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>\r\n                    Add new post\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    fill all the field before submitting\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Okay</Button>\r\n                </DialogActions>\r\n        </Dialog>\r\n        <Dialog open={ope} onClose={handleClos}>\r\n                <DialogTitle>\r\n                    post added\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    Congratulation, your post is added\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClos}>Okay</Button>\r\n                </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, CardActionArea, CardActions } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React from 'react';\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport {selectpost} from '../feature/postSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport {getpost} from '../feature/postSlice'\r\nimport {Link} from 'react-router-dom'\r\nimport './style.css'\r\nexport const Modify = () => {\r\n    const dispatch=useDispatch()\r\n    const post= useSelector(selectpost)\r\n    const [open, setOpen] = React.useState(false);\r\n    const[clickTitle, setClickTitle] =React.useState(\"\")\r\n    const [clickId, setClickId]=React.useState(\"\")\r\n    const[title, setTitle]=React.useState(\"\")\r\n    const [content, setContent]=React.useState(\"\")\r\n    const [ope, setOpe] = React.useState(false);\r\n    const [bool, setBool]=React.useState(false)\r\n    const handleClos = () => {\r\n        setOpe(false);\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setClickId(\"\") \r\n        setOpen(false);}\r\n        const handleCloseSubmit = () => {\r\n            setOpen(false)\r\n            if(content===\"\" || title===\"\"){\r\n                setOpe(true)\r\n            }else{\r\n                axios.patch(`https://bdh.herokuapp.com/post//updatepost/${clickId}`, {title:title, content:content})\r\n                .then(data=>{\r\n                    setBool(false)\r\n                    if(data.data.modifiedCount===1){\r\n                        axios.get(\"https://bdh.herokuapp.com/post/allpost\")\r\n                        .then(data=>dispatch(getpost({\r\n                        allpost: data.data})))\r\n                        setTimeout(()=>{\r\n                            setBool(true)\r\n                        }, 2000)\r\n                    }\r\n                })\r\n                .catch(err=>console.log(err))\r\n                setTitle(\"\")\r\n                setContent(\"\")\r\n            }\r\n        }\r\n        const run=()=>{\r\n            setTimeout(() => {\r\n                setBool(true)\r\n            }, 2000);\r\n        }\r\n        run()\r\n    return (\r\n        <div className='cardspost'>\r\n            {bool===true?\r\n            post!==null?\r\n            post.allpost.length===0?<div>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        There is not post available\r\n            </Typography>\r\n            <Button variant=\"contained\">\r\n                <Link className='Link' to='/newpost'>\r\n                Add new post\r\n                </Link>\r\n            </Button></div>:\r\n            post.allpost.map(element=>\r\n                <Card style={{width:\"200px\", height: \"300px\", margin:'5px'}}>\r\n                <CardActionArea style={{height: \"250px\"}}>\r\n                <CardContent>\r\n                <Typography style={{marginTop:\"20px\"}} gutterBottom variant=\"h5\" component=\"div\">\r\n                    {element.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {element.content}\r\n                </Typography>\r\n                </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                <Button size=\"small\" onClick={()=>{\r\n                setOpen(true)\r\n                setClickTitle(element.title)\r\n                setClickId(element._id)\r\n                }} color=\"primary\">\r\n                modify\r\n                </Button>\r\n            </CardActions>\r\n            </Card>):<div>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    your device is offline, verify your internet connection\r\n            </Typography>\r\n                <Button variant=\"contained\">\r\n                    <Link to='/updatepost' className='Link'>\r\n                    refresh the page\r\n                    </Link>\r\n                </Button>\r\n            </div>:\r\n            <div className=\"spinner spinner-border\" role=\"status\">\r\n            </div>}\r\n    <div>\r\n        <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Update {clickTitle}</DialogTitle>\r\n        <DialogContent>\r\n        <DialogContentText>\r\n            Enter the title and the content to update the post\r\n        </DialogContentText>\r\n        <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"post title\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={title}\r\n            onChange={(e)=>setTitle(e.target.value)}\r\n        />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"nam\"\r\n            label=\"post content\"\r\n            type=\"text\"\r\n            multiline\r\n            maxRows={4}\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={content}\r\n            onChange={(e)=>setContent(e.target.value)}\r\n        />\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={handleCloseSubmit}>save</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n    <Dialog open={ope}>\r\n                <DialogTitle>\r\n                    post not added\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    fill all the field before submitting\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClos}>Okay</Button>\r\n                </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n","import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, CardActionArea, CardActions } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {selectpost} from '../feature/postSlice'\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport React from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {getpost} from '../feature/postSlice'\r\nimport {Link} from 'react-router-dom'\r\nexport const Delete = () => {\r\n    const dispatch=useDispatch()\r\n    const [open, setOpen] = React.useState(false);\r\n    const [bool, setBool]=React.useState(false);\r\n    const post= useSelector(selectpost)\r\n    const[clickTitle, setClickTitle] =React.useState(\"\")\r\n    const [clickId, setClickId]=React.useState(\"\")\r\n    const handleClose = () => {\r\n    setOpen(false);}\r\n    const handleClos = () => {\r\n        setOpen(false);\r\n        axios.delete(`https://bdh.herokuapp.com/post/delete/${clickId}`)\r\n        .then(data=>{\r\n            setBool(false)\r\n            if(data.data.deletedCount===1){\r\n                axios.get(\"https://bdh.herokuapp.com/post/allpost\")\r\n                    .then(data=>dispatch(getpost({\r\n                    allpost: data.data\r\n                })))\r\n                setTimeout(()=>{\r\n                    setBool(true)\r\n                },2000)\r\n            }\r\n        })\r\n    }\r\nconst run=()=>{\r\n    setTimeout(() => {\r\n        setBool(true)\r\n    }, 2000);}\r\nrun()\r\n    return (\r\n            <div className='cardspost'>\r\n            {bool===true?\r\n            post!==null?\r\n            post.allpost.length===0?<div>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        There is not post available\r\n            </Typography>\r\n            <Button variant=\"contained\">\r\n                <Link className='Link' to='/newpost'>\r\n                Add new post\r\n                </Link>\r\n            </Button></div>:\r\n            post.allpost.map(element=>\r\n                <Card style={{width:\"200px\", height: \"300px\", margin:'5px'}}>\r\n                <CardActionArea style={{height: \"250px\"}}>\r\n                <CardContent>\r\n                <Typography style={{marginTop:\"20px\"}} gutterBottom variant=\"h5\" component=\"div\">\r\n                    {element.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {element.content}\r\n                </Typography>\r\n                </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                <Button variant=\"outlined\" onClick={()=>{\r\n                setOpen(true)\r\n                setClickId(element._id)\r\n                setClickTitle(element.title)\r\n                }} startIcon={<DeleteIcon />}>\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n            </Card>):<div>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    your device is offline, verify your internet connection\r\n            </Typography>\r\n                <Button variant=\"contained\">\r\n                    <Link to='/deletepost' className='Link'>\r\n                    refresh the page\r\n                    </Link>\r\n                </Button>\r\n            </div>:\r\n            <div className=\"spinner spinner-border\" role=\"status\">\r\n            </div>}\r\n            <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>Delete {clickTitle}</DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText>\r\n                Are you sure you want to delete this post?\r\n            </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n            <Button onClick={handleClos}>Delete</Button>\r\n            </DialogActions>\r\n            </Dialog>\r\n    </div>\r\n    )\r\n}\r\n","export const Home = () => {\r\n    return (\r\n        <div>\r\n            <h1>Welcome to story creator</h1>\r\n        </div>\r\n    )\r\n}\r\n","import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CardActionArea, CardActions } from '@material-ui/core';\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from '@material-ui/core'\r\nimport React from 'react';\r\n//import axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport {selectpost} from '../feature/postSlice'\r\n//import {useDispatch} from 'react-redux'\r\nimport './style.css'\r\nexport const View = () => {\r\n    const post= useSelector(selectpost)\r\n    const [bool, setBool]=React.useState(false)\r\n        const run=()=>{\r\n            setTimeout(() => {\r\n                setBool(true)\r\n            }, 2000);\r\n        }\r\n        run()\r\n    return (\r\n        <div className='cardspost'>\r\n            {bool===true?\r\n            post!==null?\r\n            post.allpost.length===0?<div>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        There is not post available\r\n            </Typography>\r\n            <Button variant=\"contained\">\r\n                <Link className='Link' to='/newpost'>\r\n                Add new post\r\n                </Link>\r\n            </Button></div>:\r\n            post.allpost.map(element=>\r\n                <Card style={{width:\"200px\", height: \"300px\", margin:'5px'}}>\r\n                <CardActionArea style={{height: \"300px\"}}>\r\n                <CardContent>\r\n                <Typography style={{marginTop:\"20px\"}} gutterBottom variant=\"h5\" component=\"div\">\r\n                    {element.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {element.content}\r\n                </Typography>\r\n                </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n            </CardActions>\r\n            </Card>):<div>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    your device is offline, verify your internet connection\r\n            </Typography>\r\n                <Button variant=\"contained\">\r\n                    <Link to='/allpost' className='Link'>\r\n                    refresh the page\r\n                    </Link>\r\n                </Button>\r\n            </div>:\r\n            <div className=\"spinner spinner-border\" role=\"status\">\r\n            </div>}\r\n    <div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n","import './App.css';\nimport {Navbar} from './Component/Navbar'\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport {Routes} from 'react-router-dom'\nimport {TextPost} from './Component/TextPost'\nimport { Modify } from './Component/Modify';\nimport { Delete } from './Component/Delete';\nimport {Home} from './Component/Home';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport axios from 'axios'\nimport {useDispatch} from 'react-redux'\nimport {getpost} from './feature/postSlice'\nimport {View} from './Component/View'\nfunction App() {\n  const dispatch=useDispatch()\n  const run=()=>{\n    axios.get(\"https://bdh.herokuapp.com/post/allpost\")\n    .then(data=>dispatch(getpost({\n      allpost: data.data\n    })))\n  }\n  run()\n  return (\n    <Router>\n        <>\n            <div className=\"App\">\n            <Navbar/>\n            <Routes>\n              <Route path='/' element={<Home/>}/>\n              <Route path='/newpost/' element={<TextPost/>}/>\n              <Route path='/updatepost' element= {<Modify/>}/>\n              <Route path='/deletepost' element= {<Delete/>}/>\n              <Route path='/allpost' element={<View/>}/>\n            </Routes>\n          </div>\n        </>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport postSlice from '../feature/postSlice'\r\nexport default configureStore({\r\n    reducer:{\r\n        post: postSlice\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './app/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}